name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  actions: read
  id-token: write
  pull-requests: write

jobs:
  ci-pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install project
        run: pip install -e .[check,test]
      - name: run pre-commit
        run: "pre-commit run --all"
  ci-test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        pylint-version: ["3.0.*", "3.*"]
        invoke-version: ["2.0.*", "2.*"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install project
        run: pip install -e .[test]
      - name: "Install dependencies"
        run: "pip install -U pylint==${{ matrix.pylint-version }} invoke==${{ matrix.invoke-version }}"
      - name: run tests (with coverage)
        run: "pytest --cov invoke_plugin_for_pylint --cov-report html --cov-report xml tests/"
      - name: run diff-cover
        run: "diff-cover --config-file pyproject.toml coverage.xml"
      - name: create uuid
        run: |
          UUID=$(uuidgen)
          echo "UUID=${UUID}" >> $GITHUB_ENV
      - name: upload coverage file
        uses: actions/upload-artifact@v4
        with:
          name: .coverage-${{ env.UUID }}
          path: ./.coverage
          if-no-files-found: error
          include-hidden-files: true
  ci-coverage-reporting:
    needs: ci-test
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download coverage files
        uses: actions/download-artifact@v4
      - name: Combine coverage files
        run: |
          pip install coverage
          coverage combine
      - name: Upload to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
